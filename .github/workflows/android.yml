name: Android CI

# This workflow will build the Android app and upload the unsigned APK as an artifact.
# It will also sign the APK and create a release using the GitHub CLI if a tag is pushed.
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*' # Matches version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write # Required for creating releases

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleRelease
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immich-tv-release-unsigned.apk
          path: ./app/build/outputs/apk/release/app-release-unsigned.apk

      - name: sign the APK
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > keystore.jks
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore keystore.jks -storepass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" app/build/outputs/apk/release/app-release-unsigned.apk "${{ secrets.ANDROID_KEY_ALIAS }}"
          mv app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/sennix-${TAG_NAME}.apk
      - name: create release using gh cli
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          gh release create ${TAG_NAME} app/build/outputs/apk/release/sennix-${TAG_NAME}.apk --title "${TAG_NAME}" --notes "Release ${TAG_NAME}"